name: Check PR Up-to-Date
on:
  push:
    branches:
      - main

jobs:
  check-up-to-date:
    concurrency:
      cancel-in-progress: true
      group: check-pr-${{ github.event.pull_request.number }}
    if: ${{ !contains(github.actor, '[bot]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: check
        name: Check if PR is up-to-date with main
        run: "# Fetch the latest main branch\ngit fetch origin main\n\n# Check how\
          \ many commits behind main\nBEHIND=$(git rev-list --count HEAD..origin/main)\n\
          \necho \"commits_behind=$BEHIND\" >> $GITHUB_OUTPUT\n\nif [ \"$BEHIND\"\
          \ -gt 0 ]; then\n  echo \"::warning::PR is $BEHIND commits behind main\"\
          \n  exit 0  # Don't fail the check, just warn\nelse\n  echo \"PR is up-to-date\
          \ with main\"\nfi\n"
      - id: measurement-3
        name: Record Measurement After Check if PR is up-to-date with main
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Check if PR is up-to-date with main
          task: get-measurement
      - if: ${{ steps.check.outputs.commits_behind != '0' }}
        name: Comment if PR needs update
        uses: actions/github-script@v7
        with:
          script: "const behind = ${{ steps.check.outputs.commits_behind }};\nconst\
            \ COMMENT_COOLDOWN_HOURS = 24;\nconst COOLDOWN_MS = COMMENT_COOLDOWN_HOURS\
            \ * 60 * 60 * 1000;\n\n// Check for recent similar comments\nconst { data:\
            \ comments } = await github.rest.issues.listComments({\n  owner: context.repo.owner,\n\
            \  repo: context.repo.repo,\n  issue_number: context.payload.pull_request.number,\n\
            \  per_page: 10\n});\n\nconst hasRecentComment = comments.some(c =>\n\
            \  c.body?.includes('commits behind `main`') &&\n  c.user?.login === 'github-actions[bot]'\
            \ &&\n  new Date(c.created_at) > new Date(Date.now() - COOLDOWN_MS)\n\
            );\n\nif (!hasRecentComment) {\n  await github.rest.issues.createComment({\n\
            \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    issue_number:\
            \ context.payload.pull_request.number,\n    body: `\U0001F4CA **PR Status**:\
            \ ${behind} commits behind \\`main\\`\\n\\nConsider updating your branch\
            \ for the most accurate CI results:\\n\\n**Option 1**: Use GitHub's \"\
            Update branch\" button (if available)\\n\\n**Option 2**: Update locally:\\\
            n\\`\\`\\`bash\\ngit fetch origin main\\ngit merge origin/main\\ngit push\\\
            n\\`\\`\\`\\n\\n*Note: If you use a different remote name (e.g., upstream),\
            \ adjust the commands accordingly.*\\n\\nThis ensures your changes are\
            \ tested against the latest code.`\n  });\n}\n"
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
permissions:
  contents: read
  pull-requests: write
